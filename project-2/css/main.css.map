{"version":3,"file":"main.css","sources":["main.scss","base/mixins.scss","../../node_modules/mathsass/dist/_math.scss","../../node_modules/mathsass/dist/_constants.scss","../../node_modules/mathsass/dist/functions/_pow.scss","../../node_modules/mathsass/dist/functions/_fact.scss","../../node_modules/mathsass/dist/functions/_sqrt.scss","../../node_modules/mathsass/dist/functions/_exp.scss","../../node_modules/mathsass/dist/functions/_frexp.scss","../../node_modules/mathsass/dist/functions/_ldexp.scss","../../node_modules/mathsass/dist/functions/_log.scss","../../node_modules/mathsass/dist/functions/_sin.scss","../../node_modules/mathsass/dist/functions/_cos.scss","../../node_modules/mathsass/dist/functions/_tan.scss","../../node_modules/mathsass/dist/functions/_csc.scss","../../node_modules/mathsass/dist/functions/_sec.scss","../../node_modules/mathsass/dist/functions/_cot.scss","../../node_modules/mathsass/dist/functions/_asin.scss","../../node_modules/mathsass/dist/functions/_acos.scss","../../node_modules/mathsass/dist/functions/_atan.scss","../../node_modules/mathsass/dist/functions/_atan2.scss","../../node_modules/mathsass/dist/helpers/_strip-unit.scss","../../node_modules/mathsass/dist/helpers/_deg-to-rad.scss","../../node_modules/mathsass/dist/helpers/_rad-to-deg.scss","../../node_modules/mathsass/dist/helpers/_unitless-rad.scss","base/mixins/family.scss","base/mixins/common.scss","base/variables.scss","base/animation/easings.scss","base/animation/timings.scss","base/variables/color.scss","base/variables/tochange.scss","base/reset.scss","elements/html.scss","elements/body.scss","elements/buttons.scss","elements/lists.scss","components/stage.scss","components/box.scss","components/circle.scss"],"sourcesContent":["//====================\n// Vars/Mixins\n//====================\n@import \"base/mixins\";\n@import \"base/variables\";\n\n//====================\n// Base\n//====================\n@import \"base/reset\";\n\n//====================\n// Elements\n//====================\n@import \"elements/html\";\n@import \"elements/body\";\n@import \"elements/buttons\";\n@import \"elements/lists\";\n\n//====================\n// components\n//====================\n@import \"components/stage\";\n@import \"components/box\";\n@import \"components/circle\";\n\n//====================\n// Layout\n//====================\n","@import \"../../../node_modules/mathsass/dist/math\";\n@import \"mixins/family\";\n@import \"mixins/common\";\n","// MathSass v0.9.5\n// https://github.com/terkel/mathsass\n//\n// Copyright (c) 2014 Takeru Suzuki - http://terkel.jp/\n// Licensed under the MIT license - http://opensource.org/licenses/MIT\n\n// Constants\n@import \"constants\";\n\n// Exponentiation\n@import \"functions/pow\";\n\n// Factorial\n@import \"functions/fact\";\n\n// Square root\n@import \"functions/sqrt\";\n\n// Exponential function\n@import \"functions/exp\";\n@import \"functions/frexp\";\n@import \"functions/ldexp\";\n\n// Logarithms\n@import \"functions/log\";\n\n// Trigonometric functions\n@import \"functions/sin\";\n@import \"functions/cos\";\n@import \"functions/tan\";\n@import \"functions/csc\";\n@import \"functions/sec\";\n@import \"functions/cot\";\n\n// Inverse trigonometric functions\n@import \"functions/asin\";\n@import \"functions/acos\";\n@import \"functions/atan\";\n@import \"functions/atan2\";\n\n// Helpers\n@import \"helpers/strip-unit\";\n@import \"helpers/deg-to-rad\";\n@import \"helpers/rad-to-deg\";\n@import \"helpers/unitless-rad\";\n","// Constants\n$E:     2.718281828459045;\n$PI:    3.141592653589793;\n$LN2:   0.6931471805599453;\n$SQRT2: 1.4142135623730951;\n","// Returns base to the exponent power.\n// @param {Number} $base The base number\n// @param {Number} $exp The exponent to which to raise base\n// @return {Number}\n// @example\n//     pow(4, 2)   // 16\n//     pow(4, -2)  // 0.0625\n//     pow(4, 0.2) // 1.31951\n@function pow ($base, $exp) {\n    @if $exp == floor($exp) {\n        $r: 1;\n        $s: 0;\n        @if $exp < 0 {\n            $exp: $exp * -1;\n            $s: 1;\n        }\n        @while $exp > 0 {\n            @if $exp % 2 == 1 {\n                $r: $r * $base;\n            }\n            $exp: floor($exp * 0.5);\n            $base: $base * $base;\n        }\n        @return if($s != 0, 1 / $r, $r);\n    } @else {\n        @return exp(log($base) * $exp);\n    }\n}\n","// Returns the factorial of a non-negative integer.\n// @param {Number} $x A non-negative integer.\n// @return {Number}\n// @example\n//     fact(0) // 1\n//     fact(8) // 40320\n@function fact ($x) {\n    @if $x < 0 or  $x != floor($x) {\n        @warn \"Argument for `fact()` must be a positive integer.\";\n        @return null;\n    }\n    $ret: 1;\n    @while $x > 0 {\n        $ret: $ret * $x;\n        $x: $x - 1;\n    }\n    @return $ret;\n}\n","// Returns the square root of a number.\n// @param {Number} $x\n// @example\n//     sqrt(2) // 1.41421\n//     sqrt(5) // 2.23607\n@function sqrt ($x) {\n    @if $x < 0 {\n        @warn \"Argument for `sqrt()` must be a positive number.\";\n        @return null;\n    }\n    $ret: 1;\n    @for $i from 1 through 24 {\n        $ret: $ret - (pow($ret, 2) - $x) / (2 * $ret);\n    }\n    @return $ret;\n}\n","// Returns E^x, where x is the argument, and E is Euler's constant, the base of the natural logarithms.\n// @param {Number} $x\n// @example\n//     exp(1)  // 2.71828\n//     exp(-1) // 0.36788\n@function exp ($x) {\n    $ret: 0;\n    @for $n from 0 to 24 {\n        $ret: $ret + pow($x, $n) / fact($n);\n    }\n    @return $ret;\n}\n","// Returns a two-element list containing the normalized fraction and exponent of number.\n// @param {Number} $x\n// @return {List} fraction, exponent\n@function frexp ($x) {\n    $exp: 0;\n    @if $x < 0 {\n        $x: $x * -1;\n    }\n    @if $x < 0.5 {\n        @while $x < 0.5 {\n            $x: $x * 2;\n            $exp: $exp - 1;\n        }\n    } @else if $x >= 1 {\n        @while $x >= 1 {\n            $x: $x / 2;\n            $exp: $exp + 1;\n        }\n    }\n    @return $x, $exp;\n}\n","// Returns $x * 2^$exp\n// @param {Number} $x\n// @param {Number} $exp\n@function ldexp ($x, $exp) {\n    $b: if($exp >= 0, 2, 1 / 2);\n    @if $exp < 0 {\n        $exp: $exp * -1;\n    }\n    @while $exp > 0 {\n        @if $exp % 2 == 1 {\n            $x: $x * $b;\n        }\n        $b: $b * $b;\n        $exp: floor($exp * 0.5);\n    }\n    @return $x;\n}\n","// Returns the natural logarithm of a number.\n// @param {Number} $x\n// @example\n//     log(2)  // 0.69315\n//     log(10) // 2.30259\n@function log ($x) {\n    @if $x <= 0 {\n        @return 0 / 0;\n    }\n    $k: nth(frexp($x / $SQRT2), 2);\n    $x: $x / ldexp(1, $k);\n    $x: ($x - 1) / ($x + 1);\n    $x2: $x * $x;\n    $i: 1;\n    $s: $x;\n    $sp: null;\n    @while $sp != $s {\n        $x: $x * $x2;\n        $i: $i + 2;\n        $sp: $s;\n        $s: $s + $x / $i;\n    }\n    @return $LN2 * $k + 2 * $s;\n}\n","// Returns the sine of a number.\n// @param {Number} $x A number in rad or deg. Assuming unitless number to be in rad.\n// @example\n//     sin(1.0472) // 0.86603\n//     sin(60deg)  // 0.86603\n@function sin ($x) {\n    $x: unitless-rad($x);\n    @return cos($x - $PI / 2);\n}\n","// Returns the cosine of a number.\n// @param {Number} $x A number in rad or deg. Assuming unitless number to be in rad.\n// @example\n//     cos(0.7854) // 0.70711\n//     cos(45deg)  // 0.70711\n@function cos ($x) {\n    $x: unitless-rad($x);\n    $ret: 0;\n    @for $n from 0 to 24 {\n        $ret: $ret + pow(-1, $n) * pow($x, 2 * $n) / fact(2 * $n);\n    }\n    @return $ret;\n}\n","// Returns the tangent of a number.\n// @param {Number} $x A number in rad or deg. Assuming unitless number to be in rad.\n// @example\n//     tan(0.5236) // 0.57735\n//     tan(30deg)  // 0.57735\n@function tan ($x) {\n    $x: unitless-rad($x);\n    @return sin($x) / cos($x);\n}\n","// Returns the cosecant of a number.\n// @param {Number} $x A number in rad or deg. Assuming unitless number to be in rad.\n// @example\n//     csc(1.0472) // 1.1547\n//     csc(60deg)  // 1.1547\n@function csc ($x) {\n    $x: unitless-rad($x);\n    @return 1 / sin($x);\n}\n","// Returns the secant of a number.\n// @param {Number} $x A number in rad or deg. Assuming unitless number to be in rad.\n// @example\n//     sec(0.7854) // 1.41422\n//     sec(45deg)  // 1.41422\n@function sec ($x) {\n    $x: unitless-rad($x);\n    @return 1 / cos($x);\n}\n","// Returns the cotangent of a number.\n// @param {Number} $x A number in rad or deg. Assuming unitless number to be in rad.\n// @example\n//     cot(0.5236) // 1.73205\n//     cot(30deg)  // 1.73205\n@function cot ($x) {\n    $x: unitless-rad($x);\n    @return 1 / tan($x);\n}\n","// Returns the arcsine of a number.\n// @param {Number} $x A number between -1 and 1.\n// @example\n//     asin(0.1) // 0.10017\n//     asin(-1)  // -1.5708\n@function asin ($x) {\n    @if $x > 1 or $x < -1 {\n        @warn \"Argument for `asin()` must be a number between -1 and 1\";\n        @return null;\n    }\n    @return atan($x / sqrt(1 - $x * $x));\n}\n","// Returns the arccosine of a number.\n// @param {Number} $x A number between -1 and 1.\n// @example\n//     acos(0.1) // 1.47063\n//     acos(-1)  // 3.14159\n@function acos ($x) {\n    @if $x > 1 or $x < -1 {\n        @warn \"Argument for `acos()` must be a number between -1 and 1\";\n        @return null;\n    }\n    @return $PI / 2 - asin($x);\n}\n","// Returns the arctangent of a number.\n// @param {Number} $x\n// @example\n//     atan(0.1) // 0.09967\n//     atan(-1)  // -0.7854\n@function atan ($x) {\n    $i:  24;\n    $sgn: 0;\n    $a:   0;\n    @if $x > 1 {\n        $sgn:  1;\n        $x:    1 / $x;\n    } @else if $x < -1 {\n        $sgn: -1;\n        $x:    1 / $x;\n    }\n    @while $i > 0 {\n        $a: ($i * $i * $x * $x) / (2 * $i + 1 + $a);\n        $i: $i - 1;\n    }\n    @if $sgn > 0 {\n        @return  $PI / 2 - $x / (1 + $a);\n    } @else if $sgn < 0 {\n        @return -$PI / 2 - $x / (1 + $a);\n    } @else {\n        @return            $x / (1 + $a);\n    }\n}\n","// Returns the arctangent of the quotient of its arguments.\n// @param {Number} $y\n// @param {Number} $x\n// @example\n//     atan2(0, 0)       // 0\n//     atan2(0, -0.0)    // 3.14159\n//     atan2(-0.0, 0)    // 0\n//     atan2(-0.0, -0.0) // -3.14159\n//     atan2(0, 1)       // 0\n//     atan2(0, -1)      // 3.14159\n@function atan2 ($y, $x) {\n    @if $x > 0 {\n        @return atan($y / $x);\n    } @else if $x < 0 {\n        @if $y < 0 {\n            @return atan($y / $x) - $PI;\n        } @else {\n            @return atan($y / $x) + $PI;\n        }\n    } @else {\n        @if $y < 0 {\n            @return - $PI / 2;\n        } @else if $y > 0 {\n            @return $PI / 2;\n        } @else {\n            @if 1 / $x == 1 / 0 {\n                @return 0;\n            } @else {\n                @if 1 / $y == 1 / 0 {\n                    @return $PI;\n                } @else {\n                    @return -$PI;\n                }\n            }\n        }\n    }\n}\n","// Strip unit from a number\n@function strip-unit ($number) {\n    @if unitless($number) {\n        @return $number;\n    } @else {\n        @return $number / ($number * 0 + 1);\n    }\n}\n","// Convert deg to rad\n@function deg-to-rad ($deg, $unit: true) {\n    @return strip-unit($deg) * $PI / 180 * if($unit, 1rad, 1);\n}\n","// Convert rad to deg\n@function rad-to-deg ($rad, $unit: true) {\n    @return strip-unit($rad) * 180 / $PI * if($unit, 1deg, 1);\n}\n","// Convert to unitless rad\n@function unitless-rad ($angle) {\n    @if unitless($angle) {\n        @return $angle;\n    } @else if unit($angle) == rad {\n        @return $angle / 1rad;\n    } @else if unit($angle) == deg {\n        @return deg-to-rad($angle, false);\n    } @else if type-of($angle) != number or not unitless($angle) {\n        @warn \"#{ $angle } is not a valid number.\";\n        @return $angle;\n    }\n}\n","/// Select all children from the first to `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin first($num){\n\t@if $num == 1{\n\t\t&:first-child{\n\t\t\t@content;\n\t\t}\n\t} @else{\n\t\t&:nth-child(-n + #{$num}){\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n/// Select all children from the last to `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin last($num){\n\t&:nth-last-child(-n + #{$num}){\n\t\t@content;\n\t}\n}\n\n/// Select all children after the first to `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin after-first($num){\n\t&:nth-child(n + #{$num + 1}){\n\t\t@content;\n\t}\n}\n\n/// Select all children before `$num` from the last.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin from-end($num){\n\t&:nth-last-child(#{$num}){\n\t\t@content;\n\t}\n}\n\n/// Select all children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin between($first, $last){\n\t&:nth-child(n + #{$first}):nth-child(-n + #{$last}){\n\t\t@content;\n\t}\n}\n\n/// Select all even children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin even-between($first, $last){\n\t&:nth-child(even):nth-child(n + #{$first}):nth-child(-n + #{$last}){\n\t\t@content;\n\t}\n}\n\n/// Select all odd children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin odd-between($first, $last){\n\t&:nth-child(odd):nth-child(n + #{$first}):nth-child(-n + #{$last}){\n\t\t@content;\n\t}\n}\n\n/// Select all `$num` children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin n-between($num, $first, $last){\n\t&:nth-child(#{$num}n):nth-child(n + #{$first}):nth-child(-n + #{$last}){\n\t\t@content;\n\t}\n}\n\n/// Select all children but `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin all-but($num){\n\t&:not(:nth-child(#{$num})){\n\t\t@content;\n\t}\n}\n\n/// Select children each `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n/// @alias every\n@mixin each($num){\n\t&:nth-child(#{$num}n){\n\t\t@content;\n\t}\n}\n\n/// Select children each `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin every($num){\n\t&:nth-child(#{$num}n){\n\t\t@content;\n\t}\n}\n\n/// Select the `$num` child from the start and the `$num` child from the last.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin from-first-last($num){\n\t&:nth-child(#{$num}),\n\t&:nth-last-child(#{$num}){\n\t\t@content;\n\t}\n}\n\n/// Select the item in the middle of `$num` child. Only works with odd number\n/// chain.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin middle($num){\n\t&:nth-child(#{round($num / 2)}){\n\t\t@content;\n\t}\n}\n\n/// Select all children between the `$num` first and the `$num` last.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - id of the child\n@mixin all-but-first-last($num){\n\t&:nth-child(n + #{$num}):nth-last-child(n + #{$num}){\n\t\t@content;\n\t}\n}\n\n/// This quantity-query mixin will only select the first of `$limit` items. It will not\n/// work if there is not as much as item as you set in `$limit`.\n/// @group Quantity queries\n/// @param{number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin first-of($limit){\n\t&:nth-last-child(#{$limit}):first-child{\n\t\t@content;\n\t}\n}\n\n/// This quantity-query mixin will only select the last of `$limit` items. It will not\n/// if there is not as much as item as you set in `$limit`.\n/// @group Quantity queries\n/// @param{number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin last-of($limit){\n\t&:nth-of-type(#{$limit}):nth-last-of-type(1){\n\t\t@content;\n\t}\n}\n\n/// This quantity-query mixin will select every items if there is at least `$num` items. It will not\n/// if there is not as much as item as you set in `$num`.\n/// @group Quantity queries\n/// @param{number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin at-least($num){\n\t$selector: &;\n\t$child: nth(nth($selector, -1), -1);\n\n\t&:nth-last-child(n + #{$num}),\n\t&:nth-last-child(n + #{$num}) ~ #{$child}{\n\t\t@content;\n\t}\n}\n\n/// This quantity-query mixin will select every items if there is at most `$num` items. It will not\n/// if there is not as much as item as you set in `$num`.\n/// @group Quantity queries\n/// @param{number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin at-most($num){\n\t$selector: &;\n\t$child: nth(nth($selector, -1), -1);\n\n\t&:nth-last-child(-n + #{$num}):first-child,\n\t&:nth-last-child(-n + #{$num}):first-child ~ #{$child}{\n\t\t@content;\n\t}\n}\n\n/// This quantity-query mixin will select every items only if there is between `$min` and `$max` items.\n/// @group Quantity queries\n/// @param{number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin in-between($min, $max){\n\t$selector: &;\n\t$child: nth(nth($selector, -1), -1);\n\n\t&:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child,\n\t&:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child ~ #{$child}{\n\t\t@content;\n\t}\n}\n\n/// Select the first exact child\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin first-child(){\n\t&:first-of-type{\n\t\t@content;\n\t}\n}\n\n/// Select the last exact child\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin last-child(){\n\t&:last-of-type{\n\t\t@content;\n\t}\n}\n\n/// Select all even children.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin even(){\n\t&:nth-child(even){\n\t\t@content;\n\t}\n}\n\n/// Select all odd children.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin odd(){\n\t&:nth-child(odd){\n\t\t@content;\n\t}\n}\n\n/// Select only the first and last child.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin first-last(){\n\t&:first-child,\n\t&:last-child{\n\t\t@content;\n\t}\n}\n\n/// Will only select the child if it’s unique.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @alias only\n@mixin unique(){\n\t&:only-child{\n\t\t@content;\n\t}\n}\n\n/// Will only select the child if it’s unique.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin only(){\n\t&:only-child{\n\t\t@content;\n\t}\n}\n\n/// Will only select children if they are not unique. Meaning if there is at\n/// least 2 children, the style is applied.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin not-unique(){\n\t&:not(:only-child){\n\t\t@content;\n\t}\n}\n\n/// This mixin is used to automatically sort z-index in numerical order. But it\n/// can also sort them in anti-numerical order, depending the parameters you use.\n/// @group using functions\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param{number} $num - Number of children\n/// @param{string} $direction [forward] - Direction of the sort\n/// @param{number} $index [0] - Index of the sorting\n@mixin child-index($num, $direction: 'forward', $index: 0){\n\t@for $i from 1 through $num{\n\t\t@if ($direction == 'forward'){\n\t\t\t&:nth-child(#{$i}){\n\t\t\t\tz-index: order-index($i, $index);\n\t\t\t\t@content;\n\t\t\t}\n\t\t} @else if ($direction == 'backward'){\n\t\t\t&:nth-last-child(#{$i}){\n\t\t\t\tz-index: order-index($i, $index);\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Used by the child-index mixin. It will returned the proper sorted numbers\n/// depending on the `$index` value.\n/// @access private\n/// @param{number} $num - Number of children\n/// @param{number} $index - Index of the sorting\n@function order-index($i, $index){\n\t@return ($index + $i);\n}\n","@function strip-unit($num){\n\t@return $num / ($num * 0 + 1);\n}\n\n@function unit($num, $unit){\n\t@return strip-unit($num) + $unit;\n}\n","@import \"animation/easings\";\n@import \"animation/timings\";\n@import \"variables/color\";\n@import \"variables/tochange\";\n","//====================\n// Easing\n//====================\n//user ease out\n$easeOut: \t\t\tcubic-bezier(0.3, 0.15, 0.18, 1);\n$easeOutBounce: \tcubic-bezier(0.3, 0.15, 0.18, 1.25);\n\n//fades and color changes\n$gradientCurve: \tcubic-bezier(0.46, 0.03, 0.52, 0.96);\n","//====================\n// timings\n//====================\n//user Out timing\n$userOut: 350ms;\n$userIn: 250ms;\n$long: 750ms;\n\n$timingScale: 1.2;\n\n$userOutP1: $userOut * pow($timingScale, 3);\n$userOutP2: $userOut * pow($timingScale, 2);\n$userOutP3: $userOut * pow($timingScale, 1);\n\n$userInP1: $userIn * pow($timingScale, 3);\n$userInP2: $userIn * pow($timingScale, 2);\n$userInP3: $userIn * pow($timingScale, 1);\n\n$longP1: $long * pow($timingScale, 3);\n$longP2: $long * pow($timingScale, 2);\n$longP3: $long * pow($timingScale, 1);\n","$text-color: #2e2e2e;\n$body-background-color: #fff;\n","$base-font-size: 1.6rem;\n$line-height: 1.5;\n$font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n$base-font-weight: 400;\n","*,\n*::before,\n*::after{\n\tbox-sizing: border-box;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\nbutton,\nfigure{\n\tmargin: 0;\n\tpadding: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nblockquote,\nmenu,\nnav,\nsection,\nsummary{\n\tdisplay: block;\n}\n\nimg,\nobject,\nembed,\nvideo{\n\tdisplay: block;\n\tmax-width: 100%;\n\tborder: 0;\n}\n\nvideo{\n\theight: auto;\n}\n\n::-moz-focus-inner{\n\tpadding: 0;\n\tborder: 0;\n}\n\n:focus{\n\toutline: 0;\n}\n","html{\n\tfont-size: 62.5%;\n\t-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\t-ms-text-size-adjust: 100%;\n\t-webkit-text-size-adjust: 100%;\n}\n","body{\n\tfont-family: $font-family;\n\tcolor: $text-color;\n\tbackground-color: $body-background-color;\n\tmargin: 0;\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-font-smoothing: antialiased;\n\tfont-kerning: normal;\n\toverflow-x: hidden;\n\tfont-weight: $base-font-weight;\n\tfont-size: unit($base-font-size, em);\n\tline-height: $line-height;\n}\n","button{\n\toverflow: visible;\n\tborder: 0;\n\tcursor: pointer;\n\tbackground: none;\n\t-webkit-font-smoothing: inherit;\n\tletter-spacing: inherit;\n\tfont: inherit;\n\n\t&:focus,\n\t&:active{\n\t\toutline: none;\n\t\tbox-shadow: none;\n\t}\n}\n","nav{\n\tul,\n\tol{\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n}\n",".stage{\n\twidth: 100vw;\n\theight: 100vh;\n\tposition: relative;\n\tbackground-color: #ccc;\n}\n","$line-width: 1px;\n\n.box{\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 400px;\n\theight: 400px;\n\ttransform: translate3d(-50%, -50%, 0);\n\n\t&__lines > *{\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder-color: #000;\n\t\tborder-style: solid;\n\t\tborder-width: 0;\n\t\topacity: 0.3;\n\t\ttransition: transform 1000ms ease-in-out, opacity 1000ms ease-in-out;\n\t}\n\n\t.active &__lines > *{\n\t\topacity: 1;\n\t}\n\n\t&__top{\n\t\tborder-top-width: $line-width;\n\t\tleft: 50%;\n\t\ttop: 0;\n\t\ttransform: translate3d(-50%, 5%, 0);\n\t}\n\n\t.active &__top{\n\t\ttransform: translate3d(-50%, 49%, 0);\n\t}\n\n\t&__bottom{\n\t\tborder-bottom-width: $line-width;\n\t\tleft: 50%;\n\t\tbottom: 0;\n\t\ttransform: translate3d(-50%, -5%, 0);\n\t}\n\n\t.active &__bottom{\n\t\ttransform: translate3d(-50%, -49%, 0);\n\t}\n\n\t&__left{\n\t\tborder-left-width: $line-width;\n\t\ttop: 50%;\n\t\tleft: 0;\n\t\ttransform: translate3d(5%, -50%, 0);\n\t}\n\n\t.active &__left{\n\t\ttransform: translate3d(49%, -50%, 0);\n\t}\n\n\t&__right{\n\t\tborder-right-width: $line-width;\n\t\ttop: 50%;\n\t\tright: 0;\n\t\ttransform: translate3d(-5%, -50%, 0);\n\t}\n\n\t.active &__right{\n\t\ttransform: translate3d(-49%, -50%, 0);\n\t}\n}\n",".circle{\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 100%;\n\theight: 100%;\n\ttransform: translate3d(-50%, -50%, 0) scale(0.9);\n\tbackground-color: #000;\n\tborder-radius: 50%;\n\topacity: 1;\n\ttransition: transform 1000ms ease-in-out, opacity 1000ms ease-in-out;\n\toverflow: hidden;\n\n\t.active &{\n\t\topacity: 0;\n\t\ttransform: translate3d(-50%, -50%, 0) scale(0.015);\n\t}\n\n\t&--inner{\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder-radius: 50%;\n\t\tbackground-color: #fff;\n\t\topacity: 0.4;\n\t\ttransition: transform 750ms 250ms ease-in-out;\n\t\ttransform: scale(0.5) rotateX(90deg);\n\t\ttransform-origin: bottom;\n\t}\n\n\t.active &--inner{\n\t\ttransform: scale(1) rotateX(0deg);\n\t}\n}\n"],"names":[],"mappings":"AgCAA,AAAA,CAAC;AACD,AAAA,CAAC,AAAA,QAAQ;AACT,AAAA,CAAC,AAAA,OAAO,CAAA;EACP,UAAU,EAAE,UAAU,GACtB;;AAED,AAAA,EAAE;AACF,AAAA,EAAE;AACF,AAAA,EAAE;AACF,AAAA,EAAE;AACF,AAAA,EAAE;AACF,AAAA,EAAE;AACF,AAAA,CAAC;AACD,AAAA,UAAU;AACV,AAAA,MAAM;AACN,AAAA,MAAM,CAAA;EACL,MAAM,EAAE,CAAC;EACT,OAAO,EAAE,CAAC,GACV;;AAED,AAAA,OAAO;AACP,AAAA,KAAK;AACL,AAAA,OAAO;AACP,AAAA,UAAU;AACV,AAAA,MAAM;AACN,AAAA,MAAM;AACN,AAAA,MAAM;AACN,AAAA,IAAI;AACJ,AAAA,UAAU;AACV,AAAA,IAAI;AACJ,AAAA,GAAG;AACH,AAAA,OAAO;AACP,AAAA,OAAO,CAAA;EACN,OAAO,EAAE,KAAK,GACd;;AAED,AAAA,GAAG;AACH,AAAA,MAAM;AACN,AAAA,KAAK;AACL,AAAA,KAAK,CAAA;EACJ,OAAO,EAAE,KAAK;EACd,SAAS,EAAE,IAAI;EACf,MAAM,EAAE,CAAC,GACT;;AAED,AAAA,KAAK,CAAA;EACJ,MAAM,EAAE,IAAI,GACZ;;AAED,AAAA,kBAAkB,CAAA;EACjB,OAAO,EAAE,CAAC;EACV,MAAM,EAAE,CAAC,GACT;;AAED,AAAA,MAAM,CAAA;EACL,OAAO,EAAE,CAAC,GACV;;ACxDD,AAAA,IAAI,CAAA;EACH,SAAS,EAAE,KAAK;EAChB,2BAA2B,EAAE,WAAgB;EAC7C,oBAAoB,EAAE,IAAI;EAC1B,wBAAwB,EAAE,IAAI,GAC9B;;ACLD,AAAA,IAAI,CAAA;EACH,WAAW,EHCE,aAAa,EAAE,kBAAkB,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,gBAAgB,EAAE,UAAU;EGAxI,KAAK,EJFO,OAAO;EIGnB,gBAAgB,EJFO,IAAI;EIG3B,MAAM,EAAE,CAAC;EACT,uBAAuB,EAAE,SAAS;EAClC,sBAAsB,EAAE,WAAW;EACnC,YAAY,EAAE,MAAM;EACpB,UAAU,EAAE,MAAM;EAClB,WAAW,EHNO,GAAG;EGOrB,SAAS,ERLD,KAAwB;EQMhC,WAAW,EHVE,GAAG,GGWhB;;ACZD,AAAA,MAAM,CAAA;EACL,QAAQ,EAAE,OAAO;EACjB,MAAM,EAAE,CAAC;EACT,MAAM,EAAE,OAAO;EACf,UAAU,EAAE,IAAI;EAChB,sBAAsB,EAAE,OAAO;EAC/B,cAAc,EAAE,OAAO;EACvB,IAAI,EAAE,OAAO,GAOb;EAdD,AASC,MATK,AASL,MAAO,EATR,AAUC,MAVK,AAUL,OAAQ,CAAA;IACP,OAAO,EAAE,IAAI;IACb,UAAU,EAAE,IAAI,GAChB;;ACbF,AACC,GADE,CACF,EAAE;AADH,AAEC,GAFE,CAEF,EAAE,CAAA;EACD,MAAM,EAAE,CAAC;EACT,OAAO,EAAE,CAAC,GACV;;ACLF,AAAA,MAAM,CAAA;EACL,KAAK,EAAE,KAAK;EACZ,MAAM,EAAE,KAAK;EACb,QAAQ,EAAE,QAAQ;EAClB,gBAAgB,EAAE,IAAI,GACtB;;ACHD,AAAA,IAAI,CAAA;EACH,QAAQ,EAAE,QAAQ;EAClB,GAAG,EAAE,GAAG;EACR,IAAI,EAAE,GAAG;EACT,KAAK,EAAE,KAAK;EACZ,MAAM,EAAE,KAAK;EACb,SAAS,EAAE,0BAA0B,GA4DrC;EA1DA,AAAW,WAAH,GAAG,CAAC,CAAA;IACX,QAAQ,EAAE,QAAQ;IAClB,KAAK,EAAE,IAAI;IACX,MAAM,EAAE,IAAI;IACZ,YAAY,EAAE,IAAI;IAClB,YAAY,EAAE,KAAK;IACnB,YAAY,EAAE,CAAC;IACf,OAAO,EAAE,GAAG;IACZ,UAAU,EAAE,wDAAwD,GACpE;EAED,AAAmB,OAAZ,CAAC,WAAQ,GAAG,CAAC,CAAA;IACnB,OAAO,EAAE,CAAC,GACV;EAED,AAAA,SAAM,CAAA;IACL,gBAAgB,EA1BL,GAAG;IA2Bd,IAAI,EAAE,GAAG;IACT,GAAG,EAAE,CAAC;IACN,SAAS,EAAE,wBAAwB,GACnC;EAED,AAAQ,OAAD,CAAC,SAAM,CAAA;IACb,SAAS,EAAE,yBAAyB,GACpC;EAED,AAAA,YAAS,CAAA;IACR,mBAAmB,EArCR,GAAG;IAsCd,IAAI,EAAE,GAAG;IACT,MAAM,EAAE,CAAC;IACT,SAAS,EAAE,yBAAyB,GACpC;EAED,AAAQ,OAAD,CAAC,YAAS,CAAA;IAChB,SAAS,EAAE,0BAA0B,GACrC;EAED,AAAA,UAAO,CAAA;IACN,iBAAiB,EAhDN,GAAG;IAiDd,GAAG,EAAE,GAAG;IACR,IAAI,EAAE,CAAC;IACP,SAAS,EAAE,wBAAwB,GACnC;EAED,AAAQ,OAAD,CAAC,UAAO,CAAA;IACd,SAAS,EAAE,yBAAyB,GACpC;EAED,AAAA,WAAQ,CAAA;IACP,kBAAkB,EA3DP,GAAG;IA4Dd,GAAG,EAAE,GAAG;IACR,KAAK,EAAE,CAAC;IACR,SAAS,EAAE,yBAAyB,GACpC;EAED,AAAQ,OAAD,CAAC,WAAQ,CAAA;IACf,SAAS,EAAE,0BAA0B,GACrC;;ACnEF,AAAA,OAAO,CAAA;EACN,QAAQ,EAAE,QAAQ;EAClB,GAAG,EAAE,GAAG;EACR,IAAI,EAAE,GAAG;EACT,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ,SAAS,EAAE,0BAA0B,CAAC,UAAU;EAChD,gBAAgB,EAAE,IAAI;EACtB,aAAa,EAAE,GAAG;EAClB,OAAO,EAAE,CAAC;EACV,UAAU,EAAE,wDAAwD;EACpE,QAAQ,EAAE,MAAM,GAwBhB;EAtBA,AAAQ,OAAD,CAbR,OAAO,CAaG;IACR,OAAO,EAAE,CAAC;IACV,SAAS,EAAE,0BAA0B,CAAC,YAAY,GAClD;EAED,AAAA,cAAQ,CAAA;IACP,QAAQ,EAAE,QAAQ;IAClB,MAAM,EAAE,CAAC;IACT,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,IAAI;IACX,MAAM,EAAE,IAAI;IACZ,aAAa,EAAE,GAAG;IAClB,gBAAgB,EAAE,IAAI;IACtB,OAAO,EAAE,GAAG;IACZ,UAAU,EAAE,iCAAiC;IAC7C,SAAS,EAAE,UAAU,CAAC,cAAc;IACpC,gBAAgB,EAAE,MAAM,GACxB;EAED,AAAQ,OAAD,CAAC,cAAQ,CAAA;IACf,SAAS,EAAE,QAAQ,CAAC,aAAa,GACjC"}